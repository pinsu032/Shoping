package com.uj.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.uj.dto.Login;
import com.uj.dto.User;
import com.uj.entity.UsersMaster;
import com.uj.repo.UserMasterRepo;

@Service
public class UserServiceImpl implements IUserService {
	
	private UserMasterRepo masterRepo;
	
	@Autowired
	public UserServiceImpl(UserMasterRepo masterRepo) {
		this.masterRepo = masterRepo;
	}

	@Override
	public boolean registerEmployee(User user) {
		UsersMaster userMaster = new UsersMaster();
        userMaster.setRole("USER");
		BeanUtils.copyProperties(user, userMaster);
		UsersMaster save = masterRepo.save(userMaster);
		
		return save.getUserId()!=null;
	}

	@Override
	public List<User> getAllUsers() {
		List<UsersMaster> findAll = masterRepo.findAll();

		List<User> userList = new ArrayList<>();
		findAll.forEach(entity -> {
			User user = new User();
			BeanUtils.copyProperties(entity, user);
			userList.add(user);
		});
		return userList;
	}

	@Override
	public User getUserById(Integer id) {
		Optional<UsersMaster> findById = masterRepo.findById(id);
		if (findById.isPresent()) {
			UsersMaster userMaster = findById.get();
			User user = new User();
			BeanUtils.copyProperties(userMaster, user);
			return user;
		} else {
			return null;
		}
	}

	@Override
	public User getUserByMobile(Long mobile) {
		UsersMaster findByMobile = masterRepo.findByMobile(mobile);
		User user = new User();
		BeanUtils.copyProperties(findByMobile, user);
		return user;
	}

	@Override
	public boolean deleteUser(Integer id) {
		try {
			masterRepo.deleteById(id);
			return true;
		} catch (Exception e) {
			return false;
		}
	}

	@Override
	public String login(Login login) {
		UsersMaster findByMobileAndPassword = masterRepo.findByMobileAndPassword(login.getMobile(), login.getPassword());
		String msg = " ";
		if (findByMobileAndPassword != null) 
			msg = "login success";
		else 
			msg = "Invalid credentials";

		return msg;
	}
	
	

}
